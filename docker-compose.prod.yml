# version: '3.8'

# This file is for production. It uses pre-built images from GHCR.
services:
  redis:
    image: redis:7-alpine
    # container_name: mpb-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  mpb-telegram-bot:
    image: ghcr.io/ackrome/matplobbot-bot:${BOT_TAG:-latest}
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - bot_logs:/app/logs
      - matplobblib_lib:/usr/local/lib/python3.11/site-packages/matplobblib # Persist library updates
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy


  mpb-scheduler:
    image: ghcr.io/ackrome/matplobbot-scheduler:${SCHEDULER_TAG:-latest}
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - bot_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy

  mpb-fastapi-stats:
    image: ghcr.io/ackrome/matplobbot-api:${API_TAG:-latest} 
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "9583:9583"
    volumes:
      - bot_logs:/app/logs
    depends_on:
      mpb-telegram-bot:
        condition: service_started # API can start once the bot container starts
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9583/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  bot_logs:
  matplobblib_lib:
  redis_data:
  postgres_data: