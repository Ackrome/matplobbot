name: CI-CD Pipeline for Matplobbot

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ackrome # Use your GitHub username (lowercase)

jobs:
  test-build-and-push:
    # IMPORTANT: This tells GitHub to run this job on YOUR runner
    name: Test, Build and Push
    runs-on: self-hosted 

    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # Note: We are no longer using setup-python because we assume Python,
      # Docker, etc., are already installed on our self-hosted runner.
      # If not, you would add steps here to install them.

      # --- This 'test' step is now optional, as you could run it in Jenkins ---
      # - name: Run Pytest
      #   run: |
      #     pip install -r requirements.txt
      #     pytest

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # The runner automatically uses a temporary GITHUB_TOKEN
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push matplobbot-bot
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.bot
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/matplobbot-bot:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/matplobbot-bot:latest

      - name: Build and push matplobbot-api
        uses: docker/build-push-action@v4
        with:
          context: ./fastapi_stats_app
          file: ./fastapi_stats_app/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/matplobbot-api:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/matplobbot-api:latest

  trigger-deployment:
    name: Trigger Jenkins Deployment
    needs: test-build-and-push
    # Also runs on your machine
    runs-on: self-hosted 

    steps:
      - name: Trigger Jenkins Job via cURL
        run: |
          # The runner can resolve the Tailscale IP directly and securely.
          curl -X POST "${{ secrets.JENKINS_URL }}/job/matplobbot-deploy/buildWithParameters" \
            --user "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" \
            --data-urlencode "BOT_IMAGE_TAG=${{ github.sha }}" \
            --data-urlencode "API_IMAGE_TAG=${{ github.sha }}"
